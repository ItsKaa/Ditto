// <auto-generated />
using Ditto.Bot.Database;
using Ditto.Bot.Database.Data;
using Ditto.Data.Commands;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Ditto.Bot.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Ditto.Bot.Database.Models.BdoStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnName("date_updated");

                    b.Property<string>("Error")
                        .HasColumnName("error");

                    b.Property<DateTime?>("MaintenanceTime")
                        .HasColumnName("maintenance_time");

                    b.Property<int>("Status")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("bdo_status");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel")
                        .HasColumnName("access_level");

                    b.Property<string>("AliasesString")
                        .HasColumnName("aliases");

                    b.Property<bool>("Enabled")
                        .HasColumnName("enabled");

                    b.Property<ulong>("GuildId")
                        .HasColumnName("guild_id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("Priority")
                        .HasColumnName("priority");

                    b.Property<int>("SourceLevel")
                        .HasColumnName("source_level");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("commands");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong?>("GuildId")
                        .HasColumnName("guild_id");

                    b.Property<string>("Key")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("config");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("ChannelId")
                        .HasColumnName("channel_id");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<ulong>("GuildId")
                        .HasColumnName("guild_id");

                    b.Property<int>("Type")
                        .HasColumnName("type");

                    b.Property<string>("Value")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("links");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.LinkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Identity")
                        .HasColumnName("identity");

                    b.Property<int>("LinkId")
                        .HasColumnName("link_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LinkId");

                    b.ToTable("link_items");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AliasesString")
                        .HasColumnName("aliases");

                    b.Property<ulong?>("GuildId")
                        .HasColumnName("guild_id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("modules");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Data")
                        .HasColumnName("data");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnName("date_added");

                    b.Property<ulong?>("GuildId")
                        .HasColumnName("guild_id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("playlists");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.PlaylistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Data")
                        .HasColumnName("data");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnName("length");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("PlaylistId")
                        .HasColumnName("playlist_id");

                    b.Property<int>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PlaylistId");

                    b.ToTable("playlist_songs");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong?>("ChannelId")
                        .HasColumnName("channel_id");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<DateTime>("EndTime")
                        .HasColumnName("end_time");

                    b.Property<ulong?>("GuildId")
                        .HasColumnName("guild_id");

                    b.Property<string>("Message")
                        .HasColumnName("message");

                    b.Property<bool>("Repeat")
                        .HasColumnName("repeat");

                    b.Property<ulong?>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<bool>("Self")
                        .HasColumnName("self");

                    b.Property<DateTime>("StartTime")
                        .HasColumnName("start_time");

                    b.Property<ulong?>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("reminders");
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.LinkItem", b =>
                {
                    b.HasOne("Ditto.Bot.Database.Models.Link", "Link")
                        .WithMany("Links")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ditto.Bot.Database.Models.PlaylistSong", b =>
                {
                    b.HasOne("Ditto.Bot.Database.Models.Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
